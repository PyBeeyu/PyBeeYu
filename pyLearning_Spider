#!/usr/bin/python3
# -*-coding: UTF-8-*-


from urllib import request
import re


class BookTop99(object):
    def __init__(self):
        self.start = 0
        self.headers = {'User-Agent': 'Mozilla/5.0(Windows NT 6.1; WOW64)'}
        self.book_list = []
        self.file_top99 = 'C:\\Users\Administrator\Desktop\Book_spider.txt'

    def get_html_page(self):
        try:
            url = 'https://book.douban.com/subject_search?search_text=%E8%BF%90%E8%90%A5&cat=1001&start=' + str(self.start)
            req = request.Request(url, headers=self.headers)
            res = request.urlopen(req)
            html_page = res.read().decode('UTF-8')
            page_num = (self.start + 15) // 15
            print('正在爬取第' + str(page_num) + '页的数据...')
            self.start += 15
            return html_page
        except Exception as e:
            print('get_html_page函数发生' + e + '异常')

    def get_book_info(self):
        pattern = re.compile(u'<div.*?class="sc-bZQynM(.*?)bbIGij(.*?)sc-bxivhb(.*?)eHmSYu">.*?'
                            + u'<div.*?class="title">.*?'
                            + u'.*?class="title-text">(.*?)</a>.*?'
                            + u'<span.*?class="rating_nums">(.*?)</span>.*?'
                            + u'<span.*?class="pl">(.*?)</span>.*?'
                            + u'<div.*?class="meta(.*?)abstract">(.*?)/.*?'
                            + u'(.*?)/.*?'
                            + u'(.*?)/.*?'
                            + u'(.*?)/</div>.*?', re.S)
        while self.start <= 30:
            html_page = self.get_html_page()
            books = re.findall(pattern, html_page)
            for book in books:
                self.book_list.append([book[0].lstrip().rstrip(),              # 书籍序号
                                        book[1].lstrip().rstrip(),             # 书籍名称
                                        book[2].lstrip().rstrip()+'分',        # 评分
                                        book[3].lstrip().rstrip()+'人评价',    # 人评价
                                        book[4].lstrip().rstrip(),             # 作者
                                        book[5].lstrip().rstrip(),             # 出版社
                                        book[6].lstrip().rstrip()+'元'])       #售价
    def write_book99(self):
        print('正在将数据写入book.txt...')
        file_top99 = open(self.file_top99, 'w', encoding='UTF-8')
        try:
            for book in self.book_list:
                file_top99.write('书籍名称：' + book[0] + '\n\n')
                file_top99.write('网友评分：' + book[1] + '\n\n')
                file_top99.write('评价人数：' + book[2] + '\n\n')
                file_top99.write('书籍作者：' + book[3] + '\n\n')
                file_top99.write('出版书社：' + book[4] + '\n\n')
                file_top99.write('出版日期：' + book[5] + '\n\n')
                file_top99.write('建议售价：' + book[6] + '\n\n\n\n')
        except Exception as e:
            print('write_top函数发生' + e + '异常')
        finally:
            file_top99.close()

    def entrance(self):
        print('开始爬取数据...')
        self.get_book_info()
        self.write_book99()
        print('数据爬取结束！！！')

if __name__ == '__main__':
    book_top99 = BookTop99()
    book_top99.entrance()
